备注：缓冲区evbuffer中的数据量使用evbuffer_get_length(evbuffer*)获取。
备注：以下读写回调都是通过bufferevent_setcb()设置的读写回调函数。

读水位比较好理解。
读低水位：当读取缓冲区中的数据量大于等于该水位值后会调用读回调函数。
读高水位：当读取缓冲区中的数据量达到大于等于该水位值后会暂停从套接字中继续读取数据，直到读取缓冲区中的数据量小于该水位值后重新启动从套接字中读取数据。

写水位只有写低水位有效，写高水位暂时未使用。
写低水位：当发送缓冲区中的数据量小于等于该水位值后会调用写回调函数 。什么时候发送缓冲区中数据会变小？
bufferevent的设计初衷是为了发送数据时不阻塞，将要发送的数据写入到发送缓冲区后直接返回。然后发送缓冲区自己负责将其中的数据发送给对端，当对端收到这些数据同时对之进行确认后，发送缓冲区就可以将这些数据删除(调用evbuffer_drain())。这是发送缓冲区的数据量就会变小，当小于等于写低水位值后就会调用写回调函数。比如默认之写低水位为0时，当调用bufferevent_write()后，发送缓冲区中存放这数据，当这些数据实际发送完毕后，数据将会被清空，然后就会调用写回调函数。